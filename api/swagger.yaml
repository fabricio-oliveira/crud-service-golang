openapi: 3.0.2
info:
  version: "1.0.0"
  title: crud service in golang
  contact:
    email: fabricioque@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

  description: This is an simple crud application coding in golang and used dynamoDB as repository

externalDocs:
  description: Link to prometheus with some metrics of application.
  url: "https://github.com/Rebilly/generator-openapi-repo"

# A list of tags used by the definition with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: Invoice
    description: Operations about Invoice
servers:
  - url: "http://localhost:8080/api/v1"

paths:
  /invoices:
    get:
      operationId: getInvoices
      summary: Get a list of invoice
      tags:
        - Invoice
      description: |
        This method retrieve all information about a set of invoice

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
        "500":
          description: An internal Error occurred
    post:
      operationId: createInvoice
      summary: create a invoice
      tags:
        - Invoice
      description: This method let's update a invoice already created

      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "400":
          description: Invalid invocie supplied
        "404":
          description: Invocie not found
        "409":
          description: Invocie already exist
        "500":
          description: An internal Error occurred

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceBody"
        description: Updated invocie object
        required: true

  /invoices/{id}:
    get:
      operationId: getInvoiceByID
      summary: Get invoice by id
      tags:
        - Invoice
      description: |
        This method retrieve all information about one specif invoice

      parameters:
        - name: id
          in: path
          description: The id of invoice
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "404":
          description: User not found
        "500":
          description: An internal Error occurred

    put:
      operationId: updateInvoice
      summary: Updated invoice by id
      tags:
        - Invoice
      description: This method let's update a invoice already created

      parameters:
        - name: id
          in: path
          description: The id of invoice
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "400":
          description: Invalid invocie supplied
        "404":
          description: Invocie not found
        "500":
          description: An internal Error occurred

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceBody"
        description: Updated invocie object
        required: true

components:
  schemas:
    Goods:
      description: Goods of a invoice
      type: object
      properties:
        description:
          description: description of invoice item
          type: string
          maxLength: 150
        quantity:
          description: the quantity of item
          type: number
          minItems: 0
        unit:
          description: The unit used for this item
        price:
          description: The curreny of
    InvoiceBody:
      required:
        - id
      type: object
      properties:
        address:
          description: a valid address
          type: string
        company_name:
          description: the name of company
          type: string
        description:
          description: the description of invoice
          type: string
        goods:
          $ref: "#/components/schemas/Goods"
        ammount:
          description: The total of goods
          type: number
          format: decimal
    Invoice:
      required:
        - id
        - address
      allOf:
        - type: object
          properties:
            id:
              description: invoice number
              type: string
        - $ref: "#/components/schemas/InvoiceBody"
        - type: object
          properties:
            created_at:
              description: the time of record was created
              type: string
              format: date-time
              readOnly: true
            update_at:
              description: the time of last record update
              type: string
              format: date-time
              readOnly: true
